{"prompt": "Human: 在 Whizard 可观测中心里启用和禁用告警规则组有几种方法？ Assistant:", "chosen": "在 Whizard 可观测中心里启用和禁用告警规则组的方法有两种：一种是禁用和启用单个规则组，另一种是批量禁用和启用规则组。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里禁用单个规则组? Assistant:", "chosen": "在 Whizard 可观测中心里禁用单个规则组的步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择监控告警 > 规则组。\n4. 在规则组页面，点击自定义规则组或内置规则组打开规则组列表。\n5. 在需要禁用的规则组右侧点击more，然后在下拉列表中选择禁用。\n6. 在禁用规则组对话框，输入规则组的名称，然后点击确定。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里启用已禁用的规则组? Assistant:", "chosen": "在 Whizard 可观测中心里启用已禁用的规则组的步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择监控告警 > 规则组。\n4. 在规则组页面，点击自定义规则组或内置规则组打开规则组列表。\n5. 在已禁用的规则组右侧点击more，然后在下拉列表中选择启用。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里批量禁用规则组? Assistant:", "chosen": "在 Whizard 可观测中心里批量禁用规则组的步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择监控告警 > 规则组。\n4. 在规则组页面，点击自定义规则组或内置规则组打开规则组列表。\n5. 勾选需要禁用的规则组左侧的复选框，然后在规则组列表上方点击禁用。\n6. 在批量禁用规则组对话框，输入规则组的名称，然后点击确定。"}
{"prompt": "Human: 在 Whizard 可观测中心里启用和禁用告警规则组的前提条件是什么？ Assistant:", "chosen": "在 Whizard 可观测中心里启用和禁用告警规则组的前提条件有两个：\n1. KubeSphere 企业版平台需要启用告警系统扩展组件。\n2. 需要在 KubeSphere 企业版平台具有 platform-admin 角色"}
{"prompt": "Human: 如何在 Whizard 可观测中心里查看多集群监控数据？ Assistant:", "chosen": "在 Whizard 可观测中心里查看多集群监控数据首先需要满足以下前提条件：\n1. 在 KubeSphere 企业版平台具有 platform-admin 角色\n2. 需要监控的成员集群的 KubeSphere 企业版版本为 v3.3.1 或更高版本，并且已启用 Whizard 可观测中心扩展组件。\n然后，按照以下操作步骤：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台\n2. 在页面左上角选择平台管理 > Whizard 可观测中心\n3. Whizard 可观测中心的概览页面显示所有集群的监控信息\n4. 在左侧导航栏点击集群的名称，可查看集群的详细监控信息。"}
{"prompt": "Human: 如果成员集群未启用 Whizard 可观测中心扩展组件会发生什么？ Assistant:", "chosen": "如果成员集群未启用 Whizard 可观测中心扩展组件，Whizard 可观测中心将无法获取成员集群的数据，只能显示主集群的数据。"}
{"prompt": "Human: 什么是 Whizard 可观测中心？ Assistant:", "chosen": "Whizard 可观测中心是 KubeSphere 企业版的可选的组件，可以在 KubeSphere 企业版上安装。用于收集、集中存储和展示多集群的监控数据；可以制定跨集群的全局级以及集群级和项目级的告警规则组，并可以对告警进行查询和管理。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里查看全局告警列表？\t Assistant:", "chosen": "Whizard 可观测中心的告警页面显示系统根据全局告警规则组生成的告警，不包括系统根据集群和项目告警规则组生成的告警。在 Whizard 可观测中心里查看全局告警首先需要在 KubeSphere 企业版平台具有 platform-admin 角色，然后可按照以下步骤操作：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择告警管理 > 告警。\n4. 在告警页面点击来源于自定义规则或来源于内置规则打开告警列表。"}
{"prompt": "Human: Whizard 可观测中心里的告警需要手动清除吗？ Assistant:", "chosen": "Whizard 可观测中心的告警页面显示系统根据全局规则组生成的全局告警。当全局告警规则组中设置的指标满足预设的条件和持续时间时，系统将生成告警。当指标不再满足预设的条件时，告警将被系统自动清除，不需要手动清除。"}
{"prompt": "Human: 在 Whizard 可观测中心里使用告警管理功能比如创建规则组、查看规则组列表、查看规则组详情、编辑规则组信息、编辑告警规则、启用禁用规则组、查看告警列表、删除规则组有哪些共同的前提条件？ Assistant:", "chosen": "在 Whizard 可观测中心里使用告警管理功能需要如下前提条件：\n1. KubeSphere 企业版平台需要启用告警系统扩展组件。\n2. 需要在 KubeSphere 企业版平台具有 platform-admin 角色。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里创建规则组？  Assistant:", "chosen": "在 Whizard 可观测中心里创建规则组的操作步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择监控告警 > 规则组。\n4. 在规则组页面，点击自定义规则组或内置规则组打开规则组列表。\n5. 在页面点击创建。\n6. 在基本信息页签，设置规则组的基本信息，然后点击下一步。\n7. 在告警规则页签，点击添加告警规则，根据需要选择规则模板或自定义规则设置告警规则。\n8. 完成告警规则设置后点击check保存设置，然后点击创建。 规则组创建完成后将显示在规则组列表中。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里查看规则组列表？  Assistant:", "chosen": "在 Whizard 可观测中心里查看规则组列表步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择告警管理 > 规则组。\n4. 在规则组页面，点击自定义规则组或内置规则组打开规则组列表。"}
{"prompt": "Human: Whizard 可观测中心里规则组中包含的告警规则的状态有哪几种？  Assistant:", "chosen": "Whizard 可观测中心里规则组中包含的告警规则的状态包括如下几种：\n未触发：监控指标未满足预设的条件。此状态下系统不生成告警。\n验证中：监控指标满足预设的条件，但未满足预设的持续时间。\n已触发：监控指标满足预设的条件，并且满足预设的持续时间。\n已禁用：告警规则已被禁用。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里查看规则组详情? Assistant:", "chosen": "在 Whizard 可观测中心里查看规则组详情步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择告警管理 > 规则组。\n4. 在规则组页面，点击自定义规则组或内置规则组，然后在列表中点击一个规则组的名称打开其详情页面。\n5. 在规则组详情页面左侧的属性区域查看规则组的资源属性。\n6. 在规则组详情页面右侧的告警规则页签查看规则组中设置的告警规则。\n7. 在规则组详情页面右侧点击告警页签查看当前生成的告警。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里编辑规则组信息? Assistant:", "chosen": "在 Whizard 可观测中心里编辑规则组信息步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择告警管理 > 规则组。\n4. 在规则组页面，点击自定义规则组或内置规则组打开规则组列表。\n5. 在需要编辑的规则组右侧点击more，然后在下拉列表中选择编辑信息。\n6. 在编辑信息对话框，设置规则组的基本信息，然后点击确定。\n需要注意的是您可以编辑告警规则组的别名、检查周期和描述， 但 KubeSphere 企业版不支持编辑规则组的名称。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里编辑告警规则? Assistant:", "chosen": "在 Whizard 可观测中心里编辑告警规则步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择告警管理 > 规则组。\n4. 在需要编辑的规则组右侧点击more，然后在下拉列表中选择编辑告警规则。\n5. 在编辑告警规则对话框，编辑已有的告警规则或创建新告警规则，然后点击确定。\n将光标悬停在已有的告警规则上，点击相应按钮可启用/禁用、删除、修改告警规则，点击添加告警规则可创建新告警规则。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里删除规则组? Assistant:", "chosen": "在 Whizard 可观测中心里可以删除单个规则组，也可以批量删除规则组\n\n删除单个规则组步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择监控告警 > 规则组。\n4. 在需要删除的规则组右侧点击more，然后在下拉列表中选择删除。\n5. 在删除规则组对话框，输入规则组的名称，然后点击确定。\n\n批量删除规则组步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择监控告警 > 规则组。\n4. 勾选需要删除的规则组左侧的复选框，然后在规则组列表上方点击删除。\n5. 在批量删除规则组对话框，输入规则组的名称，然后点击确定。\n\n备注：\n1. KubeSphere 企业版仅支持删除自定义规则组，不支持删除内置规则组。\n2. 规则组删除后不能恢复，请谨慎执行此操作。\n3. 请使用半角逗号（,）和空格分隔多个名称。"}
{"prompt": "Human: KubeSphere 企业版中告警有哪几种状态？ Assistant:", "chosen": "KubeSphere 企业版中告警有以下两种状态：\n验证中：表示该告警指定的监控指标满足预设的条件，但未满足预设的持续时间。\n已触发：表示该告警指定的监控指标满足预设的条件，并且满足预设的持续时间。"}
{"prompt": "Human: KubeSphere 企业版中告警有哪些级别？ Assistant:", "chosen": "KubeSphere 企业版中告警有 4 个级别分别是：提醒、警告、重要、紧急。"}
{"prompt": "Human: 如何在 Whizard 可观测中心里创建 Process Exporter 的规则组？ Assistant:", "chosen": "创建 Process Exporter 的全局告警规则，可以监控集群节点上的僵尸进程。当节点上有僵尸进程的时候，就会触发告警。在启⽤ Process Exporter 扩展组件后，可以安装如下步骤创建 Process Exporter 的规则组:\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 在页面左上角选择平台管理 > Whizard 可观测中心。\n3. 在左侧导航栏选择监控告警 > 规则组。\n4. 在规则组页面，点击自定义规则组打开规则组列表。\n5. 在页面点击创建。\n6. 在基本信息页签，设置规则组的基本信息，然后点击下一步。\n7. 在告警规则页签，点击添加告警规则，选择自定义规则。\n8. 配置集群设置、规则名称、概要、告警级别。\n9. 在告警规则表达式下填写此表达式：\nsum by (cluster, job, instance, groupname)(namedprocess_namegroup_states{state=\"Zombie\"}) > 0\n10. 完成告警规则设置后点击check保存设置，然后点击创建。规则组创建完成后将显示在规则组列表中。"}
{"prompt": "Human: 如何在 KubeSphere 企业版安装前，为 Whizard 可观测中心配置本地持久卷？ Assistant:", "chosen": "在 KubeSphere 企业版安装前为 Whizard 可观测中心配置本地持久卷步骤如下：\n1. 在 KubeSphere 企业版安装前配置\n登录集群节点，执行以下命令编辑 cluster-configuration.yaml 配置文件：\nvi cluster-configuration.yaml\n2. 将 spec:monitoring:whizard:server 下的 storageClass 设置为对应的存储类，volumeSize 参数修改为合适的存储大小，然后保存⽂件。\nspec:\n  monitoring:\n    whizard:\n      server:\n        storageClass: \"\"\n        volumeSize: 20Gi\n"}
{"prompt": "Human: 如何在 KubeSphere 企业版安装后，为 Whizard 可观测中心配置本地持久卷？ Assistant:", "chosen": "在 KubeSphere 企业版安装后为 Whizard 可观测中心配置本地持久卷步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 将光标悬停在页面右下角的锤子图标，然后在菜单中选择 kubectl。\n3. 在 kubectl 对话框，执行以下命令编辑集群配置文件：\nkubectl edit cc ks-installer -n kubesphere-system\n4. 在集群配置文件中，将 spec:monitoring:whizard:server 下的 storageClass 设置为对应的存储类，volumeSize 参数修改为合适的存储大小，然后保存⽂件。\nspec:\n  monitoring:\n    whizard:\n      server:\n        storageClass: \"\"\n        volumeSize: 20Gi\n"}
{"prompt": "Human: 如何在 KubeSphere 企业版中为 Whizard 配置内部 TLS 通信？ Assistant:", "chosen": "用户可以在 KubeSphere 企业版安装前和安装后为 Whizard 配置内部 TLS 通信\n在 KubeSphere 企业版安装前配置步骤如下：\n1. 登录集群节点，执行以下命令编辑 cluster-configuration.yaml 配置文件：\nvi cluster-configuration.yaml\n2. 将 spec:monitoring:whizard:server:tlsEnable 参数设置为 true，然后保存⽂件。\nspec:\n  monitoring:\n    whizard:\n      server:\n        nodePort: 30990\n        tlsEnable: true\n\n在 KubeSphere 企业版安装后配置步骤如下：\n1. 以具有 platform-admin 角色的用户登录 KubeSphere 企业版 Web 控制台。\n2. 将光标悬停在页面右下角的hammer 图标，然后在菜单中选择 kubectl。\n3. 在 kubectl 对话框，执行以下命令删除 Whizard 的资源：\nhelm delete whizard -n kubesphere-monitoring-system\n4. 执行以下命令编辑集群配置文件。\nkubectl edit cc ks-installer -n kubesphere-system\n5. 在集群配置文件中，将 spec:monitoring:whizard:server:tlsEnable 参数设置为 true，并删除 status:monitoring 参数的全部内容，然后保存⽂件。\nspec:\n  monitoring:\n    whizard:\n      server:\n        nodePort: 30990\n        tlsEnable: true\n删除 status:monitoring 参数的内容：\nstatus:\n  monitoring:\n    enabledTime: 2023-09-28T14:16:41CST\n    status: enabled\n"}
{"prompt": "Human: 如何配置 Whizard 的系统默认参数？ Assistant:", "chosen": "Whizard 默认参数分为系统参数和组件内置参数。\n系统参数可以通过命令行参数传入，用于全局参数设置，可如下所示设置：\n# 每个 Ingester 实例允许处理 Tenant 的数量，即 Ingester 承载租户数据的能力，默认值为 3。\ndefaultTenantsPerIngester: 3\n# 在空租户时 Ingester 的回收周期； Ingester 会由于租户删除或迁移，导致 Ingester 上没有租户，此时需要回收；在使用对象存储时默认为 3h， 在无对象存储情况下，此参数会和该 Ingester 的 localTsdbRetention 保持一致。\ndefaultIngesterRetentionPeriod: 3h\n# 在配置对象存储情况下每个 Compactor 实例允许处理的 Tenant 数量，即 Compactor 承载租户数据的能力，默认值为 10。\ndefaultTenantsPerCompactor: 10\n"}
{"prompt": "Human: 如何配置 Whizard 的组件内置参数？ Assistant:", "chosen": "Whizard 默认参数分为系统参数和组件内置参数。\n组件内置参数用于设置各组件的默认参数，可如下所示设置：\n  gateway:\n    resources:\n      limits:\n        cpu: \"2\"\n        memory: 4Gi\n      requests:\n        cpu: 50m\n        memory: 50Mi\n\n  router:\n    resources:\n      limits:\n        cpu: \"2\"\n        memory: 4Gi\n      requests:\n        cpu: 50m\n        memory: 50Mi\n\n  queryFrontend:\n    resources:\n      limits:\n        cpu: \"2\"\n        memory: 4Gi\n      requests:\n        cpu: 50m\n        memory: 50Mi\n\n  query:\n    resources:\n      limits:\n        cpu: \"2\"\n        memory: 4Gi\n      requests:\n        cpu: 50m\n        memory: 50Mi\n\n  ingester:\n    image: thanosio/thanos:v0.31.0\n    resources:\n      limits:\n        cpu: \"4\"\n        memory: 16Gi\n      requests:\n        cpu: 50m\n        memory: 50Mi\n    dataVolume:\n      persistentVolumeClaim:\n        spec:\n          resources:\n            requests:\n              storage: 20Gi\n\n    disableTSDBCleanup: true\n    localTsdbRetention: 7d  # 本地数据存储时间，在启用对象存储时建议配置为 2d，不必在本地过多存储数据\n    flags:\n      - --tsdb.out-of-order.time-window=10m\n\n  store:\n    resources:\n      limits:\n        cpu: \"1\"\n        memory: 4Gi\n      requests:\n        cpu: 100m\n        memory: 500Mi\n    dataVolume:\n      persistentVolumeClaim:\n        spec:\n          resources:\n            requests:\n              storage: 20Gi\n    # 默认提供了一个时间区间配置，其产生的 store 工作负载提供 `now - 36h` 之前数据的查询，其他时间的数据查询将请求 Ingester。\n    # 用户可根据对象存储中的数据保留期限，配置多时间分区。\n    timeRanges:\n    - maxTime: -36h\n    flags:\n      - --web.disable\n      - --no-cache-index-header\n\n  ruler:\n    resources:\n      limits:\n        cpu: \"2\"\n        memory: 4Gi\n      requests:\n        cpu: 50m\n        memory: 50Mi\n    shards: 1\n    evaluationInterval: 1m\n    ruleSelectors:\n      - matchLabels:\n          role: alert-rules\n    alertmanagersUrl:\n      - dnssrv+http://alertmanager-operated.kubesphere-monitoring-system.svc:9093\n"}
{"prompt": "Human: 如何扩展 Whizard 中的 Store 组件？ Assistant:", "chosen": "Whizard 中的 Store 组件可通过按时间进行数据分区的机制进行扩展。对象存储中的长期数据，通常具有较长的时间跨度。按时间进行分区，多个 store 工作负载并发读取不同时间范围的数据，可在降低单个 store 工作负载压力的同时，提高整体的查询效率。\n\n可按照如下方法配置多个时间分区：\n在 Store CR 实例的 timeRanges 配置项中设置多个时间区间，将产生多个工作负载，它们分别提供不同时间区间的数据查询。以下示例配置了两个分区：now - 30d 之前的数据为一个分区，now - 30d 到 now - 36h 之间的数据划分为另一个分区。\napiVersion: monitoring.whizard.io/v1alpha1\nkind: Store\nmetadata:\n  name: whizard\nspec:\n  ...\n  timeRanges:\n  - minTime: ''   # minTime 为空或未配置时，对应的 store 工作负载将使用默认值 0000-01-01T00:00:00Z\n    maxTime: -30d\n  - minTime: -30d\n    maxTime: -36h # maxTime 为空或未配置时，对应的 store 工作负载将使用默认值 9999-12-31T23:59:59Z\n  ...\n备注：\n1. maxTime 和 minTime 还支持配置 RFC3339 格式时间，例如：2018-01-01T00:00:00Z。\n2. 组件默认内置参数中的 store 项提供了时间分区的默认配置，用户更新该默认配置项后，将在所有未配置 timeRanges 的 Store CR 实例中生效。"}
{"prompt": "Human: 如何通过 Whizard Gateway 访问 Thanos Query UI？ Assistant:", "chosen": "Thanos Query 提供了 WebUI 供用户运行 PromQL 查询和访问 Thanos 的其他功能。但是直接暴露没有用户认证的 Thanos Query 给用户通常涉及到数据安全问题。因此 Whizard 支持用户通过 Whizard Gateway 经过用户认证的方式来访问 Thanos Query UI， 具体步骤如下：\n\n1. 修改 gateway CR，kubectl edit gateways.monitoring.whizard.io -n kubesphere-monitoring-system whizard，开启 debug 模式。\nspec:\n  debug: true # 开启 Debug 模式\n  enabledTenantsAdmission: true\n  image: kubesphere/whizard-monitoring-gateway:v0.9.0\n  logFormat: logfmt\n  logLevel: info\n  nodePort: 30990 # gateway nodePort 端口 \n                                 \n2. Query 组件增加 --web.prefix-header=X-Forwarded-Prefix flag\n修改 query CR，kubectl edit query.monitoring.whizard.io -n kubesphere-monitoring-system whizard，增加 --web.prefix-header=X-Forwarded-Prefix flag。\nspec:\n  envoy:\n    image: envoyproxy/envoy:v1.20.2\n  flags:\n  - --web.prefix-header=X-Forwarded-Prefix\n  image: thanosio/thanos:v0.32.1\n  logFormat: logfmt\n  logLevel: info\n  replicaLabelNames:\n  - prometheus_replica\n  - receive_replica\n  - ruler_replica\n\n3. 使用 Gateway NodePort 端口访问 Thanos Query UI\n配置好上述两步后，我们可以使用 https://<host-ip>:30990/-/ui/ 直接访问 Thanos Query UI 页面。"}
{"prompt": "Human: 如何估算 Whizard 中租户的数据量？ Assistant:", "chosen": "Whizard 中租户的数据量可通过如下两个公式计算：\n计算各个租户每秒样本摄入率：sum by(tenant)(rate(prometheus_tsdb_head_samples_appended_total{type=\"float\"}[1h]))\n计算各个租户每个样本占用bytes： avg by(tenant)(prometheus_tsdb_compaction_chunk_size_bytes_sum / prometheus_tsdb_compaction_chunk_samples_sum)\n需要注意的是 Whizard 需要手动设置下 ServiceMonitor 配置采集，才能看到 rometheus_tsdb_* 等相关 Metrics：\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: whizard-ingester\n  namespace: kubesphere-monitoring-system\n  labels:\n    app.kubernetes.io/vendor: kubesphere\n    app.kubernetes.io/name: whizard\n    app.kubernetes.io/component: ingester\nspec:\n  endpoints:\n  - honorLabels: true\n    interval: 1m\n    port: http\n    scheme: http\n    scrapeTimeout: 30s\n  jobLabel: app.kubernetes.io/name\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: ingester\n\n指标数据量与内存消耗估算：\n上文也提到了，Prometheus 需要将当前 Block 的数据加载到内存中，在有大量的指标指标数据量时需要消耗内存，它的计算方式如链接所示: https://www.robustperception.io/how-much-ram-does-prometheus-2-x-need-for-cardinality-and-ingestion/\n我们可以通过上面给出的链接，计算出 Prometheus cardinality 和 ingestion 消耗的内存，除此之外，还有 query、relabel metrics 时的内存消耗，此部分比较弹性，可以在计算的基础上给出 1～4 Gi 的额外预算。\n\n指标数据量与 CPU 消耗估算：\nCPU 消耗跟指标采集、规则计算、查询并发、查询范围及PromQL表达式等相关，这里没有明确推荐值，视场景进行调整配置。这里有一个基础要求，当你收到 PrometheusMissingRuleEvaluations 告警时，意味着 Prometheus 缺少规则计算，可能是由于规则组计算缓慢，CPU 不足导致的。此时就需要增加 CPU 配额了。"}
{"prompt": "Human: 如何对 Prometheus 的资源消耗进行评估？ Assistant:", "chosen": "可以通过每秒抓取样本数和样本大小来估算 Prometheus 存储数据需要的磁盘空间。\n首先，Prometheus 采用定义的存储格式将样本数据保存在本地磁盘当中。Prometheus 按照两个小时为一个时间窗口，将两小时内产生的数据存储在一个块（Block）中。每个块都是一个单独的目录，里面含该时间窗口内的所有样本数据（chunks），元数据文件（meta.json）以及索引文件（index）。当前样本数据所在的块会被直接保存在内存中，不会持久化到磁盘中。为了确保 Prometheus 发生崩溃或重启时能够恢复数据，Prometheus 启动时会通过预写日志（write-ahead-log(WAL)）重新记录，从而恢复数据。预写日志文件保存在 wal 目录中，每个文件大小为 128MB。wal 文件包括还没有被压缩的原始数据，所以比常规的块文件大得多。一般情况下，Prometheus 会保留三个 wal 文件，但如果有些高负载服务器需要保存两个小时以上的原始数据，wal 文件的数量就会大于 3 个。\n\n而我们在计算磁盘消耗，一般是指的 Black 存储的资源，计算方式如下：\n磁盘大小 = 保留时间 * 每秒抓取样本数 * 样本大小\n\n1. 保留时间为样本数据在存储中保存的时间。超过该时间限制的数据就会被删除，该参数是可以设置的。\n2. 计算样本摄入率\n# 每秒样本获取数\nrate(prometheus_tsdb_head_samples_appended_total[2h])\n3. 计算每个样本占用 bytes\n估算: Prometheus 的压缩算法(dod&xor)，每个样本大小 1~2bytes，保守按照 2bytes计算。\n精算:\n# 每个样本平均占用的bytes\nrate(prometheus_tsdb_compaction_chunk_size_bytes_sum[1h]) / rate(prometheus_tsdb_compaction_chunk_samples_sum[1h])\n"}
{"prompt": "Human: 如何为 Whizard Gateway 配置 HTTPS 访问及 Basic Auth 认证? Assistant:", "chosen": "为 Whizard Gateway 配置 HTTPS 访问及 Basic Auth 认证步骤如下：\n\n1. 为 Gateway 配置 HTTPS 访问及 Basic Auth 认证\n需要首先生成包含用于 https 认证证书的 secret，以及用于 Basic Auth 的 secret：\na. 可通过各种工具生成 TLS 证书比如 cert-manager，我们假设生成的证书保存在 whizard-tls-assets 这个 secret 里\nb. 创建名为 whizard-basicauth-secret 的 Secret 储存用户名和密码\n\napiVersion: monitoring.whizard.io/v1alpha1\nkind: Gateway\nmetadata:\n  labels:\n    monitoring.whizard.io/service: kubesphere-monitoring-system.whizard\n  name: whizard\n  namespace: kubesphere-monitoring-system\nspec:\nspec:\n  debug: true\n  ...\n  nodePort: 30990\n  webConfig:\n    httpServerTLSConfig:     # 配置 TLS 证书，证书生成创建参考 2.1\n      certSecret:\n        name: whizard-tls-assets\n        key: tls.crt\n      keySecret:\n        name: whizard-tls-assets\n        key: tls.key\n    basicAuthUsers:                # 配置 Basic Auth 认证，用户名密码存储在 Secret 中，创建参考 2.2\n    - username:\n        name: whizard-basicauth-secret\n        key: username\n      password:\n        name: whizard-basicauth-secret\n        key: password\n2. 通过 Gateway 访问 Thanos UI\n请按照 Whizard Gateway 开启 Debug 模式代理 Thanos Query UI 配置，访问 https://<host-ip>:30990/-/ui/，此时页面访问需要输入用户名密码。这里用户名密码为 admin 和 test。\n\n3. 为 Agent-Proxy 配置连接 Gateway 的认证信息\nAgent-Proxy 通过 Gateway 传输数据，在 Gateway 设置服务端认证后，AgentProxy 同样需要增加客户端认证配置等，配置方式如下：\n执行命令 kubectl edit deployment whizard-agent-proxy -n kubesphere-monitoring-system, 在 spec.template.spec.containers.args 中增加如下 --gateway.config：\n    spec:\n      containers:\n      - args:\n\t...\n        - |\n          --gateway.config=\n              basic_auth:\n                username: \"admin\"\n                password: \"test\"\n              tls_config:\n                insecure_skip_verify: true\n              transport_config:\n                max_idle_conns_per_host: 100\n\t...\n"}
